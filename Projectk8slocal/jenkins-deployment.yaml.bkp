apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: springboot-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins-sa
      securityContext:
        fsGroup: 1000
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      initContainers:
      - name: install-tools
        image: alpine:3.19  # Lightweight base image
        command: ["/bin/sh", "-c"]
        args:
        - apk add --no-cache curl maven && 
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && 
          chmod +x kubectl && 
          mv kubectl /tools/ && 
          cp /usr/bin/mvn /tools/
        volumeMounts:
        - name: tools-volume
          mountPath: /tools
      containers:
      - name: jenkins
        image: jenkins/jenkins:2.430-jdk21
        ports:
        - containerPort: 8080
        - containerPort: 50000
        env:
        - name: PATH
          value: "/opt/tools:/usr/local/bin:/usr/bin:/bin"  # Add /opt/tools to PATH
        volumeMounts:
        - name: tools-volume
          mountPath: /opt/tools  # Mount to /opt/tools instead of /usr/local/bin
        - name: jenkins-home
          mountPath: /var/jenkins_home
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "200m"
            memory: "512Mi"
      volumes:
      - name: tools-volume
        emptyDir: {}
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-pvc
